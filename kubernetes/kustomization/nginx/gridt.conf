upstream gunicorn {
    server web:8000;
}

# Define the parameters for a specific virtual host/server
server {
    listen 80;
    server_name localhost;

    charset utf-8;

    # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
    location / {
        # Define the location of the proxy server to send the request to
        proxy_pass http://gunicorn;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Define the maximum file size on file uploads
        client_max_body_size 5M;

        set $allowed_methods 'GET, POST, OPTIONS, PUT, DELETE';
        set $allowed_headers '*';

        # I really want CORS to work
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' $allowed_methods always;

            # Custom headers and headers various browsers *should* be OK with but aren't
            add_header 'Access-Control-Allow-Headers' $allowed_headers always;

            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
         }

         if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' $allowed_methods always;
            add_header 'Access-Control-Allow-Headers' $allowed_headers always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         }

         if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' $allowed_methods always;
            add_header 'Access-Control-Allow-Headers' $allowed_headers always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         }

         if ($request_method = 'DELETE') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' $allowed_methods always;
            add_header 'Access-Control-Allow-Headers' $allowed_headers always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         }

        if ($request_method = 'PUT') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' $allowed_methods always;
            add_header 'Access-Control-Allow-Headers' $allowed_headers always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
    }
}
