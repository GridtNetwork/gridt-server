apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/nginx_network: "true"
        io.kompose.service: nginx
    spec:
      containers:
      - args:
        - /bin/sh
        - -c
        - while :; do sleep 6h & wait ${!}; nginx -s reload; done & nginx -g "daemon off;"
        command: ["sleep", "infinity"]
        image: nginx:alpine
        imagePullPolicy: ""
        name: nginx
        ports:
        - containerPort: 80
        - containerPort: 443
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf-files
          readOnly: true
      nodeSelector:
        gridt-role: database
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: nginx-conf-files
        configMap:
          name: nginx-gridt-2b55kb8dg2
status: {}
