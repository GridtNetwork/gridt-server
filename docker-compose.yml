version: '3.4'
services:
    db:
        restart: always
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - '3306:3306'
        environment:
            MYSQL_ROOT_PASSWORD: root # TODO: Change this to something more secure on actual server!
        volumes:
            - ./db:/docker-entrypoint-initdb.d/:ro
        networks:
            - db_network
        command: --sql_mode=""
    web:
        restart: always
        build:
            context: ./web
            args:
                FLASK_CONFIGURATION: /etc/gridt/gridt.conf
        secrets:
            - flask
        networks:
            - nginx_network
            - db_network
        volumes:
            - ./data/web:/etc/gridt
        depends_on:
            - db
    nginx:
        restart: always
        image: nginx:alpine
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        networks:
            - nginx_network
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - web
            - certbot
        volumes:
            - ./data/nginx/:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
            - ./data/app/:/var/www/app
    certbot:
        image: certbot/certbot
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    cadvisor:
        image: gcr.io/google-containers/cadvisor:latest
        container_name: cadvisor
        ports:
            - 8080:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
            - web
            - nginx
            - db
        networks:
            - nginx_network
            - db_network
    prometheus:
        image: prom/prometheus:v2.2.1
        volumes:
            - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        depends_on:
            - cadvisor
        networks:
            - nginx_network
            - db_network
    grafana:
        image: grafana/grafana:5.1.0
        volumes:
            - ./grafana/config.ini:/etc/grafana/grafana.ini
            - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/default.yaml
            - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
            - ./grafana/dashboards:/var/lib/grafana/dashboards
        ports:
            - 3000:3000
        depends_on:
            - prometheus
        networks:
            - nginx_network
            - db_network
networks:
    nginx_network:
        driver: bridge
    db_network:
        driver: bridge
secrets:
    flask:
        file: ./data/web/flask_secret_key.txt
